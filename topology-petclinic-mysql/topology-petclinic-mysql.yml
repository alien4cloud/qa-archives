tosca_definitions_version: alien_dsl_1_4_0

metadata:
  template_name: topology-petclinic-mysql
  template_version: 0.1.0-SNAPSHOT
  template_author: admin

description: ""

imports:
  - org.alien4cloud.lang.java.jdk.linux:1.4.0-SNAPSHOT
  - tosca-normative-types:1.0.0-ALIEN14
  - petclinic-war-type:1.4.0-SNAPSHOT
  - org.alien4cloud.lang.java.pub:1.4.0-SNAPSHOT
  - tomcat-war-types:1.4.0-SNAPSHOT
  - mysql-type:1.4.0-SNAPSHOT
  - postgresql-type:1.4.0-SNAPSHOT

topology_template:
  node_templates:
    JDK:
      type: org.alien4cloud.lang.java.jdk.linux.nodes.OracleJDK
      properties:
        java_url: "https://edelivery.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.tar.gz"
        java_home: "/opt/java"
        component_version: 8.101
      requirements:
        - host:
            node: Front
            capability: tosca.capabilities.Container
            relationship: tosca.relationships.HostedOn
    Tomcat:
      type: org.alien4cloud.nodes.Tomcat
      properties:
        tomcat_home: "/opt/tomcat"
        download_url: "https://archive.apache.org/dist/tomcat/tomcat-8/v8.0.39/bin/apache-tomcat-8.0.39.tar.gz"
        component_version: "8.0.39"
      requirements:
        - host:
            node: JDK
            capability: org.alien4cloud.lang.java.pub.capabilities.JDK
            relationship: org.alien4cloud.lang.java.pub.relationships.JavaSoftwareHostedOnJDK
      capabilities:
        data_endpoint:
          properties:
            protocol: http
            port: 80
            secure: false
            network_name: PRIVATE
            initiator: source
        admin_endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Front:
      type: tosca.nodes.Compute
      capabilities:
        os:
          properties:
            architecture: "x86_64"
            type: linux
            distribution: ubuntu
        scalable:
          properties:
            min_instances: 1
            max_instances: 1
            default_instances: 1
        endpoint:
          properties:
            secure: true
            protocol: tcp
            network_name: PRIVATE
            initiator: source
    Petclinic:
      type: alien.nodes.Petclinic
      requirements:
        - host:
            node: Tomcat
            capability: org.alien4cloud.capabilities.WarContainer
            relationship: org.alien4cloud.relationships.WarHostedOnTomcat
        - database:
            node: AbstractMysql
            capability: org.alien4cloud.capabilities.MysqlDatabaseEndpoint
            relationship: alien.relationships.PetclinicConnectsToMysql
      capabilities:
        app_endpoint:
          properties:
            protocol: { get_property: [HOST, data_endpoint, protocol] }
            port: { get_property: [HOST, data_endpoint, port] }
            secure: false
            url_path: pets
            network_name: PRIVATE
            initiator: source
    AbstractMysql:
      type: org.alien4cloud.nodes.AbstractMysql
      capabilities:
        database_endpoint:
          properties:
            protocol: tcp
            secure: false
            network_name: PRIVATE
            initiator: source
  outputs:
    Petclinic_application_url:
      value: { get_attribute: [ Petclinic, application_url ] }
  workflows:
    install:
      steps:
        Front_install:
          node: Front
          activity:
            delegate: install
          on-success:
            - JDK_initial
        create_Tomcat:
          node: Tomcat
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - Tomcat_created
        Tomcat_starting:
          node: Tomcat
          activity:
            set_state: starting
          on-success:
            - start_Tomcat
        JDK_initial:
          node: JDK
          activity:
            set_state: initial
          on-success:
            - JDK_creating
        Tomcat_creating:
          node: Tomcat
          activity:
            set_state: creating
          on-success:
            - create_Tomcat
        Petclinic_configured:
          node: Petclinic
          activity:
            set_state: configured
          on-success:
            - Petclinic_starting
        JDK_configuring:
          node: JDK
          activity:
            set_state: configuring
          on-success:
            - configure_JDK
        JDK_starting:
          node: JDK
          activity:
            set_state: starting
          on-success:
            - start_JDK
        Petclinic_configuring:
          node: Petclinic
          activity:
            set_state: configuring
          on-success:
            - configure_Petclinic
        Tomcat_created:
          node: Tomcat
          activity:
            set_state: created
          on-success:
            - Tomcat_configuring
        Tomcat_initial:
          node: Tomcat
          activity:
            set_state: initial
          on-success:
            - Tomcat_creating
        Tomcat_configuring:
          node: Tomcat
          activity:
            set_state: configuring
          on-success:
            - configure_Tomcat
        start_Petclinic:
          node: Petclinic
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Petclinic_started
        configure_JDK:
          node: JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - JDK_configured
        Tomcat_started:
          node: Tomcat
          activity:
            set_state: started
          on-success:
            - Petclinic_initial
        Petclinic_creating:
          node: Petclinic
          activity:
            set_state: creating
          on-success:
            - Petclinic_created
        configure_Petclinic:
          node: Petclinic
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Petclinic_configured
        JDK_configured:
          node: JDK
          activity:
            set_state: configured
          on-success:
            - JDK_starting
        Petclinic_starting:
          node: Petclinic
          activity:
            set_state: starting
          on-success:
            - start_Petclinic
        JDK_creating:
          node: JDK
          activity:
            set_state: creating
          on-success:
            - create_JDK
        Petclinic_started:
          node: Petclinic
          activity:
            set_state: started
        start_JDK:
          node: JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - JDK_started
        Petclinic_initial:
          node: Petclinic
          activity:
            set_state: initial
          on-success:
            - Petclinic_creating
        create_JDK:
          node: JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.create
          on-success:
            - JDK_created
        JDK_created:
          node: JDK
          activity:
            set_state: created
          on-success:
            - JDK_configuring
        JDK_started:
          node: JDK
          activity:
            set_state: started
          on-success:
            - Tomcat_initial
        Tomcat_configured:
          node: Tomcat
          activity:
            set_state: configured
          on-success:
            - Tomcat_starting
        configure_Tomcat:
          node: Tomcat
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.configure
          on-success:
            - Tomcat_configured
        start_Tomcat:
          node: Tomcat
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Tomcat_started
        Petclinic_created:
          node: Petclinic
          activity:
            set_state: created
          on-success:
            - Petclinic_configuring
        AbstractMysql_install:
          node: AbstractMysql
          activity:
            delegate: install
          on-success:
            - Petclinic_initial
    uninstall:
      steps:
        Petclinic_stopping:
          node: Petclinic
          activity:
            set_state: stopping
          on-success:
            - stop_Petclinic
        Tomcat_deleted:
          node: Tomcat
          activity:
            set_state: deleted
          on-success:
            - JDK_stopping
        JDK_deleting:
          node: JDK
          activity:
            set_state: deleting
          on-success:
            - delete_JDK
        stop_Tomcat:
          node: Tomcat
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Tomcat_stopped
        Petclinic_deleted:
          node: Petclinic
          activity:
            set_state: deleted
          on-success:
            - Tomcat_stopping
            - AbstractMysql_uninstall
        Tomcat_stopped:
          node: Tomcat
          activity:
            set_state: stopped
          on-success:
            - Tomcat_deleting
        delete_JDK:
          node: JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - JDK_deleted
        JDK_deleted:
          node: JDK
          activity:
            set_state: deleted
          on-success:
            - Front_uninstall
        delete_Tomcat:
          node: Tomcat
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Tomcat_deleted
        Tomcat_stopping:
          node: Tomcat
          activity:
            set_state: stopping
          on-success:
            - stop_Tomcat
        Front_uninstall:
          node: Front
          activity:
            delegate: uninstall
        stop_Petclinic:
          node: Petclinic
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Petclinic_stopped
        Petclinic_stopped:
          node: Petclinic
          activity:
            set_state: stopped
          on-success:
            - Petclinic_deleting
        Petclinic_deleting:
          node: Petclinic
          activity:
            set_state: deleting
          on-success:
            - delete_Petclinic
        JDK_stopping:
          node: JDK
          activity:
            set_state: stopping
          on-success:
            - stop_JDK
        stop_JDK:
          node: JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - JDK_stopped
        delete_Petclinic:
          node: Petclinic
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.delete
          on-success:
            - Petclinic_deleted
        Tomcat_deleting:
          node: Tomcat
          activity:
            set_state: deleting
          on-success:
            - delete_Tomcat
        JDK_stopped:
          node: JDK
          activity:
            set_state: stopped
          on-success:
            - JDK_deleting
        AbstractMysql_uninstall:
          node: AbstractMysql
          activity:
            delegate: uninstall
    start:
      steps:
        Petclinic_started:
          node: Petclinic
          activity:
            set_state: started
        Front_start:
          node: Front
          activity:
            delegate: start
          on-success:
            - JDK_starting
        Tomcat_starting:
          node: Tomcat
          activity:
            set_state: starting
          on-success:
            - start_Tomcat
        start_JDK:
          node: JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - JDK_started
        JDK_starting:
          node: JDK
          activity:
            set_state: starting
          on-success:
            - start_JDK
        JDK_started:
          node: JDK
          activity:
            set_state: started
          on-success:
            - Tomcat_starting
        start_Petclinic:
          node: Petclinic
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Petclinic_started
        start_Tomcat:
          node: Tomcat
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.start
          on-success:
            - Tomcat_started
        Tomcat_started:
          node: Tomcat
          activity:
            set_state: started
          on-success:
            - Petclinic_starting
        Petclinic_starting:
          node: Petclinic
          activity:
            set_state: starting
          on-success:
            - start_Petclinic
        AbstractMysql_start:
          node: AbstractMysql
          activity:
            delegate: start
          on-success:
            - Petclinic_starting
    stop:
      steps:
        Petclinic_stopping:
          node: Petclinic
          activity:
            set_state: stopping
          on-success:
            - stop_Petclinic
        Petclinic_stopped:
          node: Petclinic
          activity:
            set_state: stopped
          on-success:
            - Tomcat_stopping
            - AbstractMysql_stop
        JDK_stopping:
          node: JDK
          activity:
            set_state: stopping
          on-success:
            - stop_JDK
        stop_Tomcat:
          node: Tomcat
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Tomcat_stopped
        Tomcat_stopped:
          node: Tomcat
          activity:
            set_state: stopped
          on-success:
            - JDK_stopping
        stop_JDK:
          node: JDK
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - JDK_stopped
        Tomcat_stopping:
          node: Tomcat
          activity:
            set_state: stopping
          on-success:
            - stop_Tomcat
        JDK_stopped:
          node: JDK
          activity:
            set_state: stopped
          on-success:
            - Front_stop
        Front_stop:
          node: Front
          activity:
            delegate: stop
        stop_Petclinic:
          node: Petclinic
          activity:
            call_operation: tosca.interfaces.node.lifecycle.Standard.stop
          on-success:
            - Petclinic_stopped
        AbstractMysql_stop:
          node: AbstractMysql
          activity:
            delegate: stop
